#include "constants.h"
#include "engines.h"
#include "ultrasonic.h"
#include "segments.h"


void rectangle_area(int base, int altezza)
{
    
    // Serial.print("Altezza: ");
    // Serial.println(altezza);
    int alt = altezza;
    int bas = base;    
    if(digitalRead(bottone) == HIGH)
    {
        delay(1000);

        //Determino se curvare a destra o sinistra
        int left_right_switch = -1;

        while ((alt - ROBOT_WIDTH) >= -(ROBOT_WIDTH-1))
        {
            x = 0;
            alt = alt - ROBOT_WIDTH;
            Serial.print("alt: ");
            Serial.println(alt);
            while ((distance(trig1, echo1) >= distanza_curva) && (bas >= 0))
            {

                engines_forward(calcolo_misure(WHEEL_DIAMETER, 1));
                bas--;
                x++;
                Serial.print("x: ");
                Serial.println(x);

            }
            Serial.print("y: ");
            Serial.println(y);
                            
            Serial.print("Allarme: ");
            Serial.println(altezza-y);


            //La larghezza del robot Ã¨ maggiore al tratto di altezza da tagliare
            //mi sposto indietro per trovare lo spazio per il robot e passare  
            //riposizionamente  
            if((ROBOT_WIDTH > (altezza-y)) && ((altezza-y) > 0))
            {
             
             Serial.print("Allarme: ");
             Serial.println(altezza-y);
                
                if (left_right_switch < 0)
                {
                        
                    turn_left90(calcolo_misure(WHEEL_DIAMETER, (altezza-y)))
                    engines_delay();
                    turn_left90(calcolo_misure(WHEEL_DIAMETER, (altezza-y)))
                    left90();
                    engines_stop();
                    engines_delay();
                    left_right_switch = -1;

                }
                else
                {
                    right90(calcolo_misure(WHEEL_DIAMETER, (altezza-y)));
                    engines_stop();
                    engines_delay();
                    engines_back();
                    calcolo_misure(WHEEL_DIAMETER, (altezza-y));
                    engines_stop();
                    engines_delay();
                    right90();
                    engines_stop();
                    engines_delay();

                }
                y = altezza;

            }
            else
            {
            
                if (left_right_switch < 0)
                {
                        
                    left90();
                    engines_stop();
                    engines_delay();
                    engines_back();
                    calcolo_misure(WHEEL_DIAMETER, (ROBOT_WIDTH - BLADE_WIDTH));
                    engines_stop();
                    engines_delay();

                    left90();
                    engines_stop();
                    engines_delay();
                    left_right_switch = -1;

                }
                else
                {
                    right90();
                    engines_stop();
                    engines_delay();
                    engines_back();
                    calcolo_misure(WHEEL_DIAMETER, (ROBOT_WIDTH - BLADE_WIDTH));
                    engines_stop();
                    engines_delay();
                    right90();
                    engines_stop();
                    engines_delay();

                }
                y = y-(ROBOT_WIDTH-BLADE_WIDTH);

            }
            left_right_switch = left_right_switch * -1;
            bas = base;
            Serial.print("y: ");
            Serial.println(y);
            Serial.print("x: ");
            Serial.println(x);
            y = y+15;
                
        }
    
    }
    
}
